
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULDIVADD BEC DIV DO ELSE END EQ False GEQ GRTR ID IF LEQ LESS LPAR MUL NEQ NUM READ RPAR SEM SUB THEN True WHILE WRITEProgram : StatementsStatements : StatementStatements : Statements SEM StatementStatement : If\n                 | While\n                 | Write\n                 | Read\n                 | AssignmentIf : IF Condition THEN Statements ENDIf : IF Condition THEN Statements ELSE Statements ENDWhile : WHILE Comparison DO Statements ENDAssignment : Id BEC ExpressionComparison : Expression Relation ExpressionWrite : WRITE ExpressionRead : READ IdCondition : Comparison\n                 | BooleanBoolean : True\n               | FalseRelation : EQ\n                | NEQ\n                | LESS\n                | LEQ\n                | GRTR\n                | GEQExpression : Expression ADD Expression\n                  | Expression SUB Expression\n                  | Expression MUL Expression\n                  | Expression DIV ExpressionExpression : LPAR Expression RPARExpression : NUMExpression : IdId : ID'
    
_lr_action_items = {'IF':([0,15,30,43,54,],[9,9,9,9,9,]),'WHILE':([0,15,30,43,54,],[10,10,10,10,10,]),'WRITE':([0,15,30,43,54,],[11,11,11,11,11,]),'READ':([0,15,30,43,54,],[12,12,12,12,12,]),'ID':([0,9,10,11,12,15,22,28,30,31,32,33,34,35,36,37,38,39,40,41,43,54,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,-20,-21,-22,-23,-24,-25,14,14,]),'$end':([1,2,3,4,5,6,7,8,14,23,24,26,27,29,44,47,48,49,50,51,53,55,57,],[0,-1,-2,-4,-5,-6,-7,-8,-33,-31,-32,-14,-15,-3,-12,-26,-27,-28,-29,-30,-9,-11,-10,]),'SEM':([2,3,4,5,6,7,8,14,23,24,26,27,29,44,45,47,48,49,50,51,52,53,55,56,57,],[15,-2,-4,-5,-6,-7,-8,-33,-31,-32,-14,-15,-3,-12,15,-26,-27,-28,-29,-30,15,-9,-11,15,-10,]),'END':([3,4,5,6,7,8,14,23,24,26,27,29,44,45,47,48,49,50,51,52,53,55,56,57,],[-2,-4,-5,-6,-7,-8,-33,-31,-32,-14,-15,-3,-12,53,-26,-27,-28,-29,-30,55,-9,-11,57,-10,]),'ELSE':([3,4,5,6,7,8,14,23,24,26,27,29,44,45,47,48,49,50,51,53,55,57,],[-2,-4,-5,-6,-7,-8,-33,-31,-32,-14,-15,-3,-12,54,-26,-27,-28,-29,-30,-9,-11,-10,]),'True':([9,],[20,]),'False':([9,],[21,]),'LPAR':([9,10,11,22,28,31,32,33,34,35,36,37,38,39,40,41,],[22,22,22,22,22,22,22,22,22,22,-20,-21,-22,-23,-24,-25,]),'NUM':([9,10,11,22,28,31,32,33,34,35,36,37,38,39,40,41,],[23,23,23,23,23,23,23,23,23,23,-20,-21,-22,-23,-24,-25,]),'BEC':([13,14,],[28,-33,]),'ADD':([14,19,23,24,26,42,44,46,47,48,49,50,51,],[-33,32,-31,-32,32,32,32,32,-26,-27,-28,-29,-30,]),'SUB':([14,19,23,24,26,42,44,46,47,48,49,50,51,],[-33,33,-31,-32,33,33,33,33,-26,-27,-28,-29,-30,]),'MUL':([14,19,23,24,26,42,44,46,47,48,49,50,51,],[-33,34,-31,-32,34,34,34,34,34,34,-28,-29,-30,]),'DIV':([14,19,23,24,26,42,44,46,47,48,49,50,51,],[-33,35,-31,-32,35,35,35,35,35,35,-28,-29,-30,]),'EQ':([14,19,23,24,47,48,49,50,51,],[-33,36,-31,-32,-26,-27,-28,-29,-30,]),'NEQ':([14,19,23,24,47,48,49,50,51,],[-33,37,-31,-32,-26,-27,-28,-29,-30,]),'LESS':([14,19,23,24,47,48,49,50,51,],[-33,38,-31,-32,-26,-27,-28,-29,-30,]),'LEQ':([14,19,23,24,47,48,49,50,51,],[-33,39,-31,-32,-26,-27,-28,-29,-30,]),'GRTR':([14,19,23,24,47,48,49,50,51,],[-33,40,-31,-32,-26,-27,-28,-29,-30,]),'GEQ':([14,19,23,24,47,48,49,50,51,],[-33,41,-31,-32,-26,-27,-28,-29,-30,]),'RPAR':([14,23,24,42,47,48,49,50,51,],[-33,-31,-32,51,-26,-27,-28,-29,-30,]),'THEN':([14,16,17,18,20,21,23,24,46,47,48,49,50,51,],[-33,30,-16,-17,-18,-19,-31,-32,-13,-26,-27,-28,-29,-30,]),'DO':([14,23,24,25,46,47,48,49,50,51,],[-33,-31,-32,43,-13,-26,-27,-28,-29,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Statements':([0,30,43,54,],[2,45,52,56,]),'Statement':([0,15,30,43,54,],[3,29,3,3,3,]),'If':([0,15,30,43,54,],[4,4,4,4,4,]),'While':([0,15,30,43,54,],[5,5,5,5,5,]),'Write':([0,15,30,43,54,],[6,6,6,6,6,]),'Read':([0,15,30,43,54,],[7,7,7,7,7,]),'Assignment':([0,15,30,43,54,],[8,8,8,8,8,]),'Id':([0,9,10,11,12,15,22,28,30,31,32,33,34,35,43,54,],[13,24,24,24,27,13,24,24,13,24,24,24,24,24,13,13,]),'Condition':([9,],[16,]),'Comparison':([9,10,],[17,25,]),'Boolean':([9,],[18,]),'Expression':([9,10,11,22,28,31,32,33,34,35,],[19,19,26,42,44,46,47,48,49,50,]),'Relation':([19,],[31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Statements','Program',1,'p_program','ply-parser.py',296),
  ('Statements -> Statement','Statements',1,'p_statements_statement','ply-parser.py',300),
  ('Statements -> Statements SEM Statement','Statements',3,'p_statements_statements','ply-parser.py',304),
  ('Statement -> If','Statement',1,'p_statement','ply-parser.py',310),
  ('Statement -> While','Statement',1,'p_statement','ply-parser.py',311),
  ('Statement -> Write','Statement',1,'p_statement','ply-parser.py',312),
  ('Statement -> Read','Statement',1,'p_statement','ply-parser.py',313),
  ('Statement -> Assignment','Statement',1,'p_statement','ply-parser.py',314),
  ('If -> IF Condition THEN Statements END','If',5,'p_if','ply-parser.py',318),
  ('If -> IF Condition THEN Statements ELSE Statements END','If',7,'p_if_else','ply-parser.py',322),
  ('While -> WHILE Comparison DO Statements END','While',5,'p_while','ply-parser.py',326),
  ('Assignment -> Id BEC Expression','Assignment',3,'p_assignment','ply-parser.py',330),
  ('Comparison -> Expression Relation Expression','Comparison',3,'p_comparison','ply-parser.py',334),
  ('Write -> WRITE Expression','Write',2,'p_write','ply-parser.py',338),
  ('Read -> READ Id','Read',2,'p_read','ply-parser.py',342),
  ('Condition -> Comparison','Condition',1,'p_condition','ply-parser.py',346),
  ('Condition -> Boolean','Condition',1,'p_condition','ply-parser.py',347),
  ('Boolean -> True','Boolean',1,'p_boolean','ply-parser.py',351),
  ('Boolean -> False','Boolean',1,'p_boolean','ply-parser.py',352),
  ('Relation -> EQ','Relation',1,'p_relation','ply-parser.py',356),
  ('Relation -> NEQ','Relation',1,'p_relation','ply-parser.py',357),
  ('Relation -> LESS','Relation',1,'p_relation','ply-parser.py',358),
  ('Relation -> LEQ','Relation',1,'p_relation','ply-parser.py',359),
  ('Relation -> GRTR','Relation',1,'p_relation','ply-parser.py',360),
  ('Relation -> GEQ','Relation',1,'p_relation','ply-parser.py',361),
  ('Expression -> Expression ADD Expression','Expression',3,'p_expression_binary','ply-parser.py',365),
  ('Expression -> Expression SUB Expression','Expression',3,'p_expression_binary','ply-parser.py',366),
  ('Expression -> Expression MUL Expression','Expression',3,'p_expression_binary','ply-parser.py',367),
  ('Expression -> Expression DIV Expression','Expression',3,'p_expression_binary','ply-parser.py',368),
  ('Expression -> LPAR Expression RPAR','Expression',3,'p_expression_parenthesis','ply-parser.py',372),
  ('Expression -> NUM','Expression',1,'p_expression_num','ply-parser.py',376),
  ('Expression -> Id','Expression',1,'p_expression_id','ply-parser.py',380),
  ('Id -> ID','Id',1,'p_id','ply-parser.py',384),
]
